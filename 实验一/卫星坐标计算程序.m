%% 卫星坐标计算
clear; clc;
format long;
% 设定时间
point_num = 20;
year = 2025; month = 1; day = 1;
frequency = 1;

for hour = 0:2:(2*frequency-1)
    disp hour
% 导入广播星历数据（每行含4个参数）
    if hour == 0
        ephemeris = [
          4.500000000000E+01,  1.090625000000E+02,  4.528045754138E-09,  3.131427222067E+00;
          5.554407835007E-06,  2.091019414365E-04,  2.112239599228E-06,  5.153755172729E+03;
          3.024000000000E+05,  2.980232238770E-08, -1.783259133478E+00,  2.980232238770E-08;
          9.596575373827E-01,  3.364062500000E+02, -1.305969830383E+00, -8.338561620276E-09;
          2.750114553310E-10,  1.000000000000E+00,  2.347000000000E+03,  0.000000000000E+00
        ];
    elseif hour == 2
        ephemeris = [
          4.600000000000E+01 1.181562500000E+02 4.499830293140E-09 -2.106629093740E+00;
          6.230548024180E-06 2.099645789710E-04 2.477318048480E-06 5.153752782820E+03;
          3.096000000000E+05 -1.862645149230E-09 -1.783319222840E+00 9.313225746150E-09;
          9.596596893350E-01 3.291562500000E+02 -1.300967579500E+00 -8.314632052080E-09;
          2.975123925850E-10 1.000000000000E+00 2.347000000000E+03 0.000000000000E+00
        ];
    elseif hour == 4
        ephemeris = [
          4.700000000000E+01 1.219062500000E+02 4.483043879630E-09 -1.060200763400E+00;
          6.385147571560E-06 2.104729646820E-04 3.034248948100E-06 5.153751295090E+03;
          3.168000000000E+05 0.000000000000E+00 -1.783378996210E+00 3.352761268620E-08;
          9.596618837120E-01 3.206562500000E+02 -1.297262492240E+00 -8.297488480840E-09;
          2.903692379010E-10 1.000000000000E+00 2.347000000000E+03 0.000000000000E+00;
        ];
    elseif hour == 6
        ephemeris = [
          4.800000000000E+01 1.282812500000E+02 4.478043671350E-09 -7.502215491674E-03;
          6.720423698425E-06 2.106509637088E-04 3.114342689514E-06 5.153752103806E+03;
          3.240000000000E+05 -5.960464477539E-08 -1.783438168318E+00 -6.891787052155E-08;
          9.596637474699E-01 3.208125000000E+02 -1.299828883570E+00 -8.276059016792E-09;
          1.975082270104E-10 1.000000000000E+00 2.347000000000E+03 0.000000000000E+00
        ];
    elseif hour == 8
        ephemeris = [
         4.900000000000E+01 1.240625000000E+02 4.561261423418E-09 1.039634927916E+00;
         6.262212991714E-06 2.109749475494E-04 2.805143594742E-06 5.153753225327E+03;
         3.312000000000E+05 4.097819328308E-08 -1.783497605217E+00 -1.676380634308E-08;
         9.596646457016E-01 3.266562500000E+02 -1.296833125779E+00 -8.346061932694E-09;
         1.292910997790E-10 1.000000000000E+00 2.347000000000E+03 0.000000000000E+00
        ];
    elseif hour == 10
        ephemeris = [
         5.000000000000E+01 1.177187500000E+02 4.658408327120E-09 2.091965474390E+00;
         6.113201379780E-06 2.113312948500E-04 2.525746822360E-06 5.153752361300E+03;
         3.384000000000E+05 3.352761268620E-08 -1.783557697500E+00 -5.587935447690E-09;
         9.596655658770E-01 3.264687500000E+02 -1.299030923200E+00 -8.346061932690E-09;
         1.267909956400E-10 1.000000000000E+00 2.347000000000E+03 0.000000000000E+00
        ];
    end
    
    % 解包参数
    IODE = ephemeris(1,1);   Crs = ephemeris(1,2);  Delta_n = ephemeris(1,3); M0 = ephemeris(1,4);
    Cuc  = ephemeris(2,1);   e   = ephemeris(2,2);  Cus      = ephemeris(2,3); sqrt_a = ephemeris(2,4);
    toe  = ephemeris(3,1);   Cic = ephemeris(3,2);  OMEGA    = ephemeris(3,3); Cis    = ephemeris(3,4);
    i0   = ephemeris(4,1);   Crc = ephemeris(4,2);  w        = ephemeris(4,3); OMEGA_DOT = ephemeris(4,4);
    i_dot = ephemeris(5,1);  % 倾角变化率
    
    %% 日期转换：
    % 格里高利历 -> 儒略日
    jd = fix(365.25 * (year - 1)) + fix(30.6001 * (month + 13)) + day + (12+hour)/24 + 1720981.5;
    
    % 儒略日 -> GPS周及周内秒
    gps_week = fix((jd - 2444244.5) / 7);
    tow = mod(jd - 2444244.5, 7) * 86400;  % TOW (周内秒)
    
    % 时间差（卫星钟参考时间修正）
    tk0 = tow - toe;
    if tk0 > 302400
        tk0 = tk0 - 604800;
    elseif tk0 < -302400
        tk0 = tk0 + 604800;
    end
    
    tk = ((0:point_num) * 60) + tk0;  % 从tk0开始每分钟1个样本
    
    %% 常数
    GM = 3.9860047e14;       % 地心引力常数 (m^3/s^2)
    We = 7.2921151467e-5;    % 地球自转角速度 (rad/s)
    a = sqrt_a^2;            % 轨道长半轴
    n0 = sqrt(GM / a^3);     % 平均角速度
    n = n0 + Delta_n;        % 改正后角速度
    
    %% 轨道参数计算
    Mk = M0 + n * tk;        % 平近点角
    Ek = Mk;                 % 初始化偏近点角
    
    % 解Kepler方程（迭代法）
    for iter = 1:10000
        Ek_next = Mk + e .* sin(Ek);
        if all(abs(Ek_next - Ek) < 1e-9)
            disp('偏近点角达到收敛');
            break;
        end
        Ek = Ek_next;
    end
    
    % 真近点角计算
    fk = atan2(sqrt(1 - e^2) .* sin(Ek), cos(Ek) - e);
    
    % 升交角距
    phi_k = fk + w;
    
    % 摄动改正
    delta_u = Cus .* sin(2 * phi_k) + Cuc .* cos(2 * phi_k);
    delta_r = Crs .* sin(2 * phi_k) + Crc .* cos(2 * phi_k);
    delta_i = Cis .* sin(2 * phi_k) + Cic .* cos(2 * phi_k);
    
    % 改正后参数
    rk = a * (1 - e .* cos(Ek)) + delta_r;        % 距离
    ik = i0 + i_dot .* tk + delta_i;              % 倾角
    uk = phi_k + delta_u;                         % 升交距角
    OMEGA_k = OMEGA + (OMEGA_DOT - We) * tk - We * toe;  % 升交点经度
    
    %% 卫星坐标计算
    point_num=point_num+1;
    XYZ = zeros(point_num, 3);  % 初始化
    
    for i = 1:point_num
        % 卫星轨道平面坐标
        x_orb = rk(i) * cos(uk(i));
        y_orb = rk(i) * sin(uk(i));
    
        % 轨道平面 -> ECEF 转换矩阵
        R = [cos(OMEGA_k(i)), -sin(OMEGA_k(i)) * cos(ik(i)), sin(OMEGA_k(i)) * sin(ik(i));
             sin(OMEGA_k(i)),  cos(OMEGA_k(i)) * cos(ik(i)), -cos(OMEGA_k(i)) * sin(ik(i));
             0              ,  sin(ik(i))                 , cos(ik(i))];
    
        % 坐标变换
        XYZ(i,:) = (R * [x_orb; y_orb; 0])';
    end
    
    %% 输出
    disp(XYZ);
    if hour ==0
        Total_XYZ = XYZ;
    else 
        Total_XYZ = [Total_XYZ;XYZ];
    end

end

%% 可视化轨迹
figure;
plot3(Total_XYZ(:,1)/1e3, Total_XYZ(:,2)/1e3, Total_XYZ(:,3)/1e3, 'b-o', 'LineWidth', 1.5);
grid on;
xlabel('X (km)');
ylabel('Y (km)');
zlabel('Z (km)');
title('卫星轨迹');
axis equal;
%view(50, 40);

% 绘制地球
[xe, ye, ze] = sphere(50);
earth_radius = 6371;
hold on;
surf(earth_radius*xe, earth_radius*ye, earth_radius*ze, ...
    'FaceColor', [0.6 0.8 1], 'EdgeColor', 'none', 'FaceAlpha', 0.3);
legend('卫星轨迹', '地球');